controlsData <- as.list(controlsData)
# Convert patientsData and controlsData to matrices
#patientsData <- matrix(as.numeric(unlist(patientsData)))
#controlsData <- matrix(as.numeric(unlist(controlsData)))
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Convert patientsData and controlsData to bare lists
patientsData <- as.list(patientsData)
controlsData <- as.list(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
View(patientsData)
View(patientsData)
View(controlsData)
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Create matrices from patientsData and controlsData
patientsData <- matrix(patientsData, ncol = 1)
controlsData <- matrix(controlsData, ncol = 1)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Create matrices from patientsData and controlsData
patientsData <- matrix(patientsData, ncol = 1)
controlsData <- matrix(controlsData, ncol = 1)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Create matrices from patientsData and controlsData
patientsData <- matrix(patientsData, ncol = 1)
controlsData <- matrix(controlsData, ncol = 1)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Create matrices from patientsData and controlsData
patientsData <- matrix(patientsData, ncol = 1)
controlsData <- matrix(controlsData, ncol = 1)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
StatisticsAnalysis[26, col] <- t.test(patientsData, controlsData)
} else {
StatisticsAnalysis[25, col] <- 0
StatisticsAnalysis[26, col] <- wilcox.test(patientsData, controlsData, paired = TRUE)
}
}
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
test_result <- t.test(patientsData, controlsData)
StatisticsAnalysis[26, col] <- test_result$p.value
} else {
StatisticsAnalysis[25, col] <- 0
test_result <- wilcox.test(patientsData, controlsData, paired = TRUE)
StatisticsAnalysis[26, col] <- test_result$p.value
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Convert data to numeric
patientsData <- as.numeric(patientsData)
controlsData <- as.numeric(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
test_result <- t.test(patientsData, controlsData)
StatisticsAnalysis[26, col] <- test_result$p.value
} else {
StatisticsAnalysis[25, col] <- 0
test_result <- wilcox.test(patientsData, controlsData, paired = TRUE)
StatisticsAnalysis[26, col] <- test_result$p.value
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
patientsData <- na.omit(StatisticsAnalysis[patients, col])
controlsData <- na.omit(StatisticsAnalysis[controls, col])
# Convert patientsData and controlsData to vectors
patientsData <- unlist(patientsData)
controlsData <- unlist(controlsData)
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
test_result <- t.test(patientsData, controlsData)
StatisticsAnalysis[26, col] <- test_result$p.value
} else {
StatisticsAnalysis[25, col] <- 0
test_result <- wilcox.test(patientsData, controlsData, paired = TRUE)
StatisticsAnalysis[26, col] <- test_result$p.value
}
}
# Define the groups as specified
patients <- c(1, 2, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18)
controls <- c(3, 4, 8, 9, 14, 15, 19, 20, 21, 22, 23, 24)
# Iterate through each column and perform Shapiro-Wilk test
for (col in 1:ncol(StatisticsAnalysis)) {
# Perform Shapiro-Wilk test
shapiro_test_result <- shapiro.test(StatisticsAnalysis[[col]])
# Check if the p-value is greater than 0.05 (normal distribution)
if (shapiro_test_result$p.value > 0.05) {
StatisticsAnalysis[25, col] <- 1
test_result <- t.test(patientsData, controlsData)
StatisticsAnalysis[26, col] <- test_result$p.value
} else {
StatisticsAnalysis[25, col] <- 0
test_result <- wilcox.test(patientsData, controlsData, paired = TRUE)
StatisticsAnalysis[26, col] <- test_result$p.value
}
}
View(StatisticsAnalysis)
library(readxl)
StatisticsAnalysis <- read_excel("StatisticsAnalysis.xlsx")
View(StatisticsAnalysis)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
View(StatisticsAnalysis)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
View(StatisticsAnalysis)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
View(StatisticsAnalysis)
View(StatisticsAnalysis)
View(test_result)
View(StatisticsAnalysis)
View(shapiro_test_result)
View(result)
View(StatisticsAnalysis)
View(shapiro_test_result)
View(StatisticsAnalysis)
View(StatisticsAnalysis)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
library(ggplot2)
installed.packages()
(.libPaths())
remove.packages("ggplot2")
remove.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
install.packages("ggplot2")
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
install.packages("package_name", repos = "https://cran.r-project.org/")
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
install.packages("ggplot2")
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
library(ggplot2)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
update.packages()
install.packages("ggplot2")
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
update.packages()
library(ggplot2)
source('D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R')
library(readxl)
StatisticsAnalysis <- read_excel("StatisticsAnalysis.xlsx")
View(StatisticsAnalysis)
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
View(StatisticsAnalysis)
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
View(StatisticsAnalysis)
View(StatisticsAnalysis)
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
View(StatisticsAnalysis)
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
debugSource("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
source("D:/Development/Projects/Ataxie/AtaxieTools/Statistics/Statistics.R")
